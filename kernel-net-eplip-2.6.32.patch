--- eplip-0.5.6.autoconf/eplip-drv.c	2010-10-14 20:38:02.000000000 +0200
+++ eplip-0.5.6/eplip-drv.c	2010-10-14 21:12:58.000000000 +0200
@@ -406,7 +406,7 @@
                                   struct hh_cache *hh);
 #endif
 static int	eplip_open(struct net_device *dev);
-static int	eplip_interrupt(int irq, void *dev_id); /*, struct pt_regs *regs);*/
+static irqreturn_t eplip_interrupt(int, void *);
 static int	eplip_close(struct net_device *dev);
 static struct	net_device_stats *eplip_get_stats(struct net_device *dev);
 static int      eplip_change_mtu(struct net_device *dev, int new_mtu);
@@ -463,6 +463,17 @@
 
 static void dma_timeout_routine( unsigned long timer_data );
 
+
+static const struct net_device_ops eplip_netdev_ops = {
+	.ndo_open	= eplip_open,
+	.ndo_stop	= eplip_close,
+	.ndo_start_xmit	= eplip_tx_packet,
+	.ndo_get_stats	= eplip_get_stats,
+	.ndo_change_mtu	= eplip_change_mtu,
+	/*.ndo_do_ioctl	= eplip_ioctl;*/
+};
+
+
 int
 eplip_init_dev(struct net_device *dev, ecp_dev *ecpdev,unsigned long hwaddr)
 {
@@ -482,12 +493,15 @@
 	ether_setup(dev);
 
 	/* Then, override parts of it */
+	dev->netdev_ops =  &eplip_netdev_ops;
+	/*
 	dev->hard_start_xmit	 = eplip_tx_packet;
 	dev->open		 = eplip_open;
 	dev->stop		 = eplip_close;
 	dev->get_stats 		 = eplip_get_stats;
         dev->change_mtu          = eplip_change_mtu;
        	//dev->do_ioctl		 = eplip_ioctl;
+       	*/
 
 	dev->tx_queue_len 	 = 10;
 	//dev->flags	        |= IFF_POINTOPOINT|IFF_NOARP;
@@ -2198,8 +2212,8 @@
  * The typical workload of the driver:
  * Handle the network interface interrupts.
  */
-static int
-eplip_interrupt(int irq, void *dev_id) /* , struct pt_regs * regs) */
+static irqreturn_t
+eplip_interrupt(int irq, void *dev_id)
 {
         struct net_device *dev = dev_id;
 	struct net_local *nl;
